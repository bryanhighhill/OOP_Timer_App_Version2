declare auto TimerApp app!
app! = new TimerApp()
app!.run()
end

class public TimerApp
    field protected BBjSysGui           sysgui!
    field protected BBjWebManager       webManager!
    
    REM 'Windows'
    field protected BBjTopLevelWindow   winMain!
    field protected BBjChildWindow      winInput!
    field protected BBjChildWindow      winBtn!
    field protected BBjChildWindow      winClock!
    field protected BBjChildWindow      winTimerColorIndicator!
    field protected BBjChildWindow      winClockRight!
    field protected BBjChildWindow      winClockLeft!
    field protected BBjChildWindow      winClockFace!
    field protected BBjChildWindow      winTimeIndicator!

    REM 'Time variables'
    field protected BBjNumber           hours!
    field protected BBjNumber           minutes!
    field protected BBjNumber           seconds!
    field protected BBjNumber           initialHours!
    field protected BBjNumber           initialMinutes!
    field protected BBjNumber           initialSeconds!
    field protected BBjNumber           totalTimeInSec!
    field protected BBjNumber           halfTime!
    field protected BBjString           totalTimeString!
    field protected BBjString           halfTimeString! 
    
    REM 'Buttons & Inputs'
    field protected BBjInputNSpinner    hoursInput!
    field protected BBjInputNSpinner    minutesInput!
    field protected BBjInputNSpinner    secondsInput!
    field protected BBjButton           startBtn!
    field protected BBjButton           pauseBtn!
    field protected BBjButton           resumeBtn!
    field protected BBjButton           cancelBtn!
    
    REM 'OTHER'
    field protected BBjNumber           noInputMessage
    field protected BBjNumber           endOfTimerMessage
    field protected BBjString           timeRemainingString!
    field protected BBjControl          timeDisplay!
    field protected BBjNumber           initialCountDown! = 1



    
    
    REM 'RUN TIMER APP'
    method public void run()
    
        #webManager! = BBjAPI().getWebManager()
        css! = java.nio.file.Files.readAllBytes(java.nio.file.Path.of(dsk("")+dir("")+"stylesheet.css"))
        #webManager!.injectStyle(css!, 0, "name=stylesheet_css")
    
        REM 'set action when app ends - refresh page'
        REM '.urlAction() - constructs a BBjBuiUrlCloseAction object to load a specified URL'
        REM '.getUrl() - returns URL of current page'
        refresh! = #webManager!.urlAction(#webManager!.getUrl())
        #webManager!.setEndAction(refresh!)
        
        rem Create UI
        #sysgui! = BBjAPI().openSysGui("X0")
        #createAppUI()
        
        process_events
        
    methodend
    
    
    REM 'CREATE MAIN APP UI'
    method public void createAppUI()
    
        REM 'MAIN WINDOW'
        title$ = "DWC Countdown Timer"
        #winMain! = #sysgui!.addWindow(title$, $01111000$)
        #winMain!.addClass("winMain")
        
        REM 'CHILD WINDOWS'
        #winInput! = #winMain!.addChildWindow("", $00108800$, #sysgui!.getAvailableContext())
        #winInput!.addClass("winInput")
        #winBtn! = #winMain!.addChildWindow("", $00108800$, #sysgui!.getAvailableContext())
        #winBtn!.addClass("winBtn")
        
        REM 'INPUTS'
        #hoursInput! = #winInput!.addInputNSpinner($0020$, "##", 0, 23)
        #hoursInput!.addClass("input-spinner")
        #hoursInput!.setAttribute("label", "Hours")
        #minutesInput! = #winInput!.addInputNSpinner($0020$, "##", 0, 59)
        #minutesInput!.addClass("input-spinner")
        #minutesInput!.setAttribute("label", "Minutes")
        #secondsInput! = #winInput!.addInputNSpinner($0020$, "##", 0, 59)
        #secondsInput!.addClass("input-spinner")
        #secondsInput!.setAttribute("label", "Seconds") 
        
        REM 'BUTTONS'
        rem 'start'
        #startBtn! = #winBtn!.addButton("Start")
        #startBtn!.setNoEdge(1)
        #startBtn!.addClass("start-button")
        
        rem 'resume'
        #resumeBtn! = #winBtn!.addButton("Resume")
        #resumeBtn!.setNoEdge(1)
        #resumeBtn!.addClass("resume-button")
        #resumeBtn!.setVisible(0)
        
        rem 'pause'
        #pauseBtn! = #winBtn!.addButton("Pause")
        #pauseBtn!.setNoEdge(1)
        #pauseBtn!.addClass("pause-button")
        #pauseBtn!.setVisible(0)
        
        rem 'cancel'
        #cancelBtn! = #winBtn!.addButton("Cancel")
        #cancelBtn!.setNoEdge(1)
        #cancelBtn!.addClass("cancel-button")
        #cancelBtn!.setVisible(0)

        REM 'CALLBACKS'
        #winMain!.setCallback(#winMain!.ON_CLOSE,"eoj")
        #startBtn!.setCallback(#startBtn!.ON_BUTTON_PUSH, #this!, "onStart")
        #resumeBtn!.setCallback(#resumeBtn!.ON_BUTTON_PUSH, #this!, "onResume")
        #pauseBtn!.setCallback(#pauseBtn!.ON_BUTTON_PUSH, #this!, "onPause")
        #cancelBtn!.setCallback(#cancelBtn!.ON_BUTTON_PUSH, #this!, "onCancel")

    methodend
    
    
    REM 'CREATE TIMER DISPLAY UI'
    method public void onStart(BBjButtonPushEvent e!)
        #hours! = #hoursInput!.getValue()
        #minutes! = #minutesInput!.getValue()
        #seconds! = #secondsInput!.getValue()

REM     'Initial time saved for repeat timer function at end of countdown'
        #initialHours! = #hours!
        #initialMinutes! = #minutes!
        #initialSeconds! = #seconds!
        
        REM 'Check to see if user inputted any time. In no, issue error. If yes, start timer'
        if (#hours! = 0) AND (#minutes! = 0) AND (#seconds! = 0) then
            #noInputMessage = msgbox("No Time Selected", 0 + 48, "Start Timer Error")
        else
            #startBtn!.setVisible(0)
            #pauseBtn!.setVisible(1)
            #cancelBtn!.setVisible(1)
            #winInput!.setVisible(0)
            
            REM 'Time variables used for clock css animations'
            #totalTimeInSec! = (#hours! *  3600) + (#minutes! * 60) + (#seconds!)
            #halfTime! = #totalTimeInSec! / 2
            #totalTimeString! = STR(#totalTimeInSec!)
            #halfTimeString! = STR(#halfTime!) 
    
            REM 'UI for time display background & set css animation timing'
            #winClock! = #winMain!.addChildWindow("", $00108800$, #sysgui!.getAvailableContext())
            #winClock!.addClass("clock-container")
        
            #winTimerColorIndicator! = #winClock!.addChildWindow("", $00108800$, #sysgui!.getAvailableContext())
            #winTimerColorIndicator!.addClass("timer-color-indicator")
        
            #winClockRight! = #winTimerColorIndicator!.addChildWindow("", $00108800$, #sysgui!.getAvailableContext())
            #winClockRight!.addClass("clock-right")
            #winClockRight!.addClass("clock-rotate-end")
            
            #webManager! = BBjAPI().getWebManager()
            #webManager!.injectStyle(".clock-rotate-end { "+
:               "animation-delay: " + #halfTimeString! + "s !important;"+
:               "animation-duration: " + #halfTimeString! + "s !important;"+
:           "}")
        
            #winClockLeft! = #winTimerColorIndicator!.addChildWindow("", $00108800$, #sysgui!.getAvailableContext())
            #winClockLeft!.setBorderColor(#sysgui!.makeColor(250, 250, 250, 0))
            #winClockLeft!.addClass("clock-left")
            #winClockLeft!.addClass("clock-rotate-start")
            
            #webManager!.injectStyle(".clock-rotate-start { "+
:               "animation-delay: 0s, " + #halfTimeString! + "s !important;"+
:               "animation-duration: " + #halfTimeString! + "s, 0s !important;"+
:           "}")
            
            #winClockFace! = #winTimerColorIndicator!.addChildWindow("", $00108800$, #sysgui!.getAvailableContext())
            #winClockFace!.addClass("clock-face")     
            
            #winTimeIndicator! = #winClockFace!.addChildWindow("", $00108800$, #sysgui!.getAvailableContext())
            #winTimeIndicator!.addClass("time-indicator-window")
            
            #displayTime()
        endif
        
    methodend
    
    
    REM 'ADD CLOCK DISPLAY OVER TIMER DISPLAY BACKGROUND'
    method public void displayTime()
    
        REM 'Check if this is first time showing display or not. If no, remove previous display. If yes, move on'
        if (#initialCountDown! = 0) then 
            #timeDisplay!.setVisible(0)
        else
            #initialCountDown! = 0
        endif
        
        REM 'Format time for clock display'
        if (#hours! > 0) then #timeRemainingString! = STR(#hours!: "00") + " : " + STR(#minutes!: "00") + " : " + STR(#seconds!: "00")
        if (#hours! = 0) AND (#minutes! > 0) then #timeRemainingString! = STR(#minutes!: "00") + " : " + STR(#seconds!: "00")
        if (#hours! = 0) AND (#minutes! = 0) AND (#seconds! >= 0) then #timeRemainingString! = " : " + STR(#seconds!: "00")         
 
        REM 'Add formatted time to dom'
        #timeDisplay! = #winTimeIndicator!.addStaticText(#timeRemainingString!)
        #timeDisplay!.addClass("time-indicator")
        
        REM 'When time is up, check if user wants to repeat timer' - should this be a seperate method?
        if (#hours! = 0) AND (#minutes! = 0) AND (#seconds! = 0) then
            #endOfTimerMessage = msgbox("Repeat Timer?", 4 + 32 + 0 + 0, "Time's Up!")
        endif
REM         
        rem 'Yes, repeat'
        if (#endOfTimerMessage = 6) then
REM         #hoursInput!.setValue(#initialHours!)
REM         #minutesInput!.setValue(#initialMinutes!)
REM         #secondsInput!.setValue(#initialSeconds!)
REM         #initialCountDown! = 1
            #hours! = #initialHours!
            #minutes! = #initialMinutes!
            #seconds!= #initialSeconds!
            #initialCountDown! = 1  
            #onStart(e!)  
        endif
        
        rem 'No, don't repeat'
        if (#endOfTimerMessage = 7) then
            #eoj()
        endif  
        
        WAIT 1
        #calculateTime()
       
    methodend 
    
    
    REM 'COUNTDOWN MATH' 
    method public void calculateTime() 
    
        BBjAPI().getWebManager().executeScript("console.log('in calculateTime() with h/m/s = " + str(#hours!) + "/" + str(#minutes!) + "/" + str(#seconds!) + "');")
       
        REM 'If there are seconds, subtract one from total seconds'
        if (#seconds! > 0) then #seconds! = #seconds! - 1
        
        REM 'If there are no seconds but there are minutes, subtract one from total minutes and set seconds to 59'
        if (#seconds! = 0) AND (#minutes! > 0) then 
            #minutes! = #minutes! - 1
            #seconds! = 59
        endif
        
        REM 'If there are no seconds & no minutes, but there are hours, subtract one from total hours, set minutes & seconds to 59'
        if (#seconds! = 0) AND (#minutes! = 0) AND (#hours! > 0) then
            #hours! = #hours! - 1
            #minutes! = 59
            #seconds! = 59
        endif
        
        #displayTime()
        
    methodend
    
    
REM     method public void onRepeat(BBjButtonPushEvent e!)
REM         
REM     methodend
REM     
       
    REM 'PAUSE TIMER METHOD'
    method public void onPause(BBjButtonPushEvent e!)
        
    methodend


    REM 'RESUME TIMER METHOD'
    method public void onResume(BBjButtonPushEvent e!)
        
    methodend
    
    
REM 'CANCEL TIMER'
    method public void onCancel(BBjButtonPushEvent e!)
        #eoj()
    methodend

    REM 'WINDOW CLOSE METHOD'
    method public void eoj()
        release
    methodend
    

    classend
    
    
    use java.lang.Thread
    